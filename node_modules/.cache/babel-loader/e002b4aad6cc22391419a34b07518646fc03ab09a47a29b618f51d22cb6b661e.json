{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nexport default {\n  __name: 'ItemResult',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // Importa los props que recibes del componente padre\n    const {\n      container,\n      fetchContainerDetail\n    } = useFetchContainers();\n    const route = useRoute();\n\n    // Define las propiedades que recibes del componente padre\n    const category = ref('');\n    const icon = ref('');\n    const color = ref('');\n    const item = ref('');\n\n    // Cuando el componente se monta, asigna los valores de las props\n    onMounted(() => {\n      category.value = route.params.category;\n      icon.value = route.params.icon;\n      color.value = route.params.color;\n      item.value = route.params.item;\n    });\n    const __returned__ = {\n      container,\n      fetchContainerDetail,\n      route,\n      category,\n      icon,\n      color,\n      item,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","container","fetchContainerDetail","useFetchContainers","route","category","icon","color","item","value","params"],"sources":["/Users/luciapannunzio/Desktop/Projects/bsr/app/src/components/ItemResult.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Item Result</h1>\n      <div>\n        <p>Category: {{ category }}</p>\n        <div> <img v-if=\"container.icon\" class=\"header-icon\" :src=\"require(`@/assets/icons/${container.icon}`)\" />\n            </div>\n        <p>Color: {{ color }}</p>\n        <p>Item: {{ item }}</p>\n      </div>\n    </div>\n  </template>\n  \n  <script setup>\n    // Importa los props que recibes del componente padre\n    import { ref, onMounted } from 'vue';\n    import { useRoute } from 'vue-router';\n\n    const { container, fetchContainerDetail } = useFetchContainers();\n  \n    const route = useRoute();\n  \n    // Define las propiedades que recibes del componente padre\n    const category = ref('');\n    const icon = ref('');\n    const color = ref('');\n    const item = ref('');\n  \n    // Cuando el componente se monta, asigna los valores de las props\n    onMounted(() => {\n      category.value = route.params.category;\n      icon.value = route.params.icon;\n      color.value = route.params.color;\n      item.value = route.params.item;\n    });\n  </script>\n  \n  <style scoped>\n    /* Estilos espec√≠ficos para este componente */\n  </style>\n  "],"mappings":"AAeI,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,QAAQ,QAAQ,YAAY;;;;;;;;IAFrC;IAIA,MAAM;MAAEC,SAAS;MAAEC;IAAqB,CAAC,GAAGC,kBAAkB,CAAC,CAAC;IAEhE,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;;IAExB;IACA,MAAMK,QAAQ,GAAGP,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMQ,IAAI,GAAGR,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMS,KAAK,GAAGT,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMU,IAAI,GAAGV,GAAG,CAAC,EAAE,CAAC;;IAEpB;IACAC,SAAS,CAAC,MAAM;MACdM,QAAQ,CAACI,KAAK,GAAGL,KAAK,CAACM,MAAM,CAACL,QAAQ;MACtCC,IAAI,CAACG,KAAK,GAAGL,KAAK,CAACM,MAAM,CAACJ,IAAI;MAC9BC,KAAK,CAACE,KAAK,GAAGL,KAAK,CAACM,MAAM,CAACH,KAAK;MAChCC,IAAI,CAACC,KAAK,GAAGL,KAAK,CAACM,MAAM,CAACF,IAAI;IAChC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}