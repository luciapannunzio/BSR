{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '@/assets/icons/left-arrow.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Item Result\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div v-if=\\\"container\\\" class=\\\"container\\\" :style=\\\"{ backgroundColor: container.color }\\\"> \"), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", {\n    class: \"header-container\"\n  }, [_createElementVNode(\"div\", {\n    class: \"header-search\"\n  }, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"Arrow\",\n    class: \"arrow-left\",\n    onClick: $setup.goToHome\n  })])]), _hoisted_1, $setup.container ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($setup.container.category), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.container.subtitle), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.container.text), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <div> <img v-if=\\\"container.icon\\\" class=\\\"header-icon\\\" :src=\\\"require(`@/assets/icons/${container.icon}`)\\\" />\\n        </div> \")]), _createCommentVNode(\" </div> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","key","_createElementBlock","_Fragment","_createCommentVNode","class","src","alt","onClick","$setup","goToHome","_hoisted_1","container","_hoisted_2","_toDisplayString","category","subtitle","text"],"sources":["/Users/luciapannunzio/Desktop/Projects/bsr/app/src/components/ItemResult.vue"],"sourcesContent":["<template>\n    <!-- <div v-if=\"container\" class=\"container\" :style=\"{ backgroundColor: container.color }\"> -->\n\n    <div>\n        <div class=\"header-container\">\n            <div class=\"header-search\">\n                <img src=\"@/assets/icons/left-arrow.png\" alt=\"Arrow\" class=\"arrow-left\" @click=\"goToHome\" />\n            </div>\n        </div>\n        <h1>Item Result</h1>\n        <div v-if=\"container\">\n            <h2>{{ container.category }}</h2>\n            <p>{{ container.subtitle }}</p>\n            <p>{{ container.text }}</p>\n        \n        </div>\n        <!-- <div> <img v-if=\"container.icon\" class=\"header-icon\" :src=\"require(`@/assets/icons/${container.icon}`)\" />\n        </div> -->\n    </div>\n    <!-- </div> -->\n</template>\n\n<script setup>\n\nimport { ref, onMounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { useFetchContainers } from '@/composables/useFetchContainers';\n\nconst router = useRouter();\nconst route = useRoute();\nconst { fetchContainerById } = useFetchContainers();\n\nconst container = ref(null);\n\nconst goToHome = () => {\n  router.push({ path: '/' });\n};\n\nonMounted(async () => {\n  const containerId = route.params.id;\n  container.value = await fetchContainerById(containerId);\n});\n</script>\n\n<style lang=\"scss\"></style>"],"mappings":";OAMqBA,UAAmC;gCAGhDC,mBAAA,CAAoB,YAAhB,aAAW;;EATvBC,GAAA;AAAA;;uBAAAC,mBAAA,CAAAC,SAAA,SACIC,mBAAA,kGAA+F,EAE/FJ,mBAAA,CAeM,cAdFA,mBAAA,CAIM;IAJDK,KAAK,EAAC;EAAkB,IACzBL,mBAAA,CAEM;IAFDK,KAAK,EAAC;EAAe,IACtBL,mBAAA,CAA4F;IAAvFM,GAAmC,EAAnCP,UAAmC;IAACQ,GAAG,EAAC,OAAO;IAACF,KAAK,EAAC,YAAY;IAAEG,OAAK,EAAEC,MAAA,CAAAC;UAGxFC,UAAoB,EACTF,MAAA,CAAAG,SAAS,I,cAApBV,mBAAA,CAKM,OAfdW,UAAA,GAWYb,mBAAA,CAAiC,YAAAc,gBAAA,CAA1BL,MAAA,CAAAG,SAAS,CAACG,QAAQ,kBACzBf,mBAAA,CAA+B,WAAAc,gBAAA,CAAzBL,MAAA,CAAAG,SAAS,CAACI,QAAQ,kBACxBhB,mBAAA,CAA2B,WAAAc,gBAAA,CAArBL,MAAA,CAAAG,SAAS,CAACK,IAAI,iB,KAbhCb,mBAAA,gBAgBQA,mBAAA,sIACU,C,GAEdA,mBAAA,YAAe,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}