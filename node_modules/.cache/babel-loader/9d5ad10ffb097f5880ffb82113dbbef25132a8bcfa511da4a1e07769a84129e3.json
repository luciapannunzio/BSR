{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ff68ff8c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.categories, (category, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"row\",\n      key: index\n    }, [_createElementVNode(\"div\", {\n      class: \"cube\",\n      style: _normalizeStyle({\n        backgroundColor: category.color\n      }),\n      onClick: $event => $options.openCube(category)\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(category.category), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.items, (item, itemIndex) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: itemIndex\n      }, _toDisplayString(item), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])], 12 /* STYLE, PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$options","categories","category","index","key","_createElementVNode","style","_normalizeStyle","backgroundColor","color","onClick","$event","openCube","_toDisplayString","items","item","itemIndex","_hoisted_2"],"sources":["/Users/luciapannunzio/Desktop/Projects/bsr/app/src/components/MainRecycled.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\" v-for=\"(category, index) in categories\" :key=\"index\">\n      <div class=\"cube\" :style=\"{ backgroundColor: category.color }\" @click=\"openCube(category)\">\n        <h3>{{ category.category }}</h3>\n        <ul>\n          <li v-for=\"(item, itemIndex) in category.items\" :key=\"itemIndex\">{{ item }}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'MainRecycled',\n  data() {\n    return {\n      containersList: [],\n    };\n  },\n  computed: {\n    categories() {\n      return this.containersList.map(container => {\n        const categoryItems = this.containersList.find(cube => cube.category === container.category);\n        return {\n          ...container,\n          items: categoryItems ? categoryItems.items : []\n        };\n      });\n    }\n  },\n  methods: {\n    openCube(category) {\n      let path = '';\n      switch (category.category) {\n        case 'Other':\n          path = '/BlackOther';\n          break;\n        case 'Food':\n          path = '/BrownFood';\n          break;\n        case 'Light Glass':\n          path = '/GreenLightGlass';\n          break;\n        case 'Dark Glass':\n          path = '/GreenDarkGlass';\n          break;\n        case 'Plastic':\n          path = '/OrangePlastic';\n          break;\n        case 'Paper':\n          path = '/BluePaper';\n          break;\n        default:\n          break;\n      }\n      this.$router.push(path);\n    }\n  },\n  created() {\n    fetch('http://localhost:3000/containersList')\n      .then(response => response.json())\n      .then(data => {\n        this.containersList = data;\n      })\n      .catch(error => {\n        console.error('Error fetching containers list:', error);\n      });\n  }\n}\n</script>\n\n\n<style scoped>\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n.row {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin-bottom: 20px; \n}\n.cube {\n  cursor: pointer; \n  width: 200px; \n  height: auto;\n  padding: 10px;\n  text-align: center;\n  border-radius: 10px;\n  font-weight: bold;\n  color: white;\n}\n.cube h3 {\n  margin-bottom: 10px;\n}\nul {\n  padding-left: 0;\n}\nli {\n  list-style-type: none;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;mBADxB;;uBACEC,mBAAA,CASM,OATNC,UASM,I,kBARJD,mBAAA,CAOME,SAAA,QATVC,WAAA,CAEiDC,QAAA,CAAAC,UAAU,EAF3D,CAE6BC,QAAQ,EAAEC,KAAK;yBAAxCP,mBAAA,CAOM;MAPDD,KAAK,EAAC,KAAK;MAA0CS,GAAG,EAAED;QAC7DE,mBAAA,CAKM;MALDV,KAAK,EAAC,MAAM;MAAEW,KAAK,EAH9BC,eAAA;QAAAC,eAAA,EAGmDN,QAAQ,CAACO;MAAK;MAAKC,OAAK,EAAAC,MAAA,IAAEX,QAAA,CAAAY,QAAQ,CAACV,QAAQ;QACtFG,mBAAA,CAAgC,YAAAQ,gBAAA,CAAzBX,QAAQ,CAACA,QAAQ,kBACxBG,mBAAA,CAEK,c,kBADHT,mBAAA,CAAgFE,SAAA,QAN1FC,WAAA,CAM0CG,QAAQ,CAACY,KAAK,EANxD,CAMsBC,IAAI,EAAEC,SAAS;2BAA3BpB,mBAAA,CAAgF;QAA/BQ,GAAG,EAAEY;MAAS,GAAAH,gBAAA,CAAKE,IAAI;8DANlFE,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}