{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'MainRecycled',\n  data() {\n    return {\n      containersList: []\n    };\n  },\n  computed: {\n    categories() {\n      return this.containersList.map(container => {\n        const categoryItems = this.containersList.find(cube => cube.category === container.category);\n        return {\n          ...container,\n          items: categoryItems ? categoryItems.items : []\n        };\n      });\n    }\n  },\n  methods: {\n    openCube(category) {\n      let path = '';\n      switch (category.category) {\n        case 'Other':\n          path = '/BlackOther';\n          break;\n        case 'Food':\n          path = '/BrownFood';\n          break;\n        case 'Light Glass':\n          path = '/GreenLightGlass';\n          break;\n        case 'Dark Glass':\n          path = '/GreenDarkGlass';\n          break;\n        case 'Plastic':\n          path = '/OrangePlastic';\n          break;\n        case 'Paper':\n          path = '/BluePaper';\n          break;\n        default:\n          break;\n      }\n      this.$router.push(path);\n    }\n  },\n  created() {\n    fetch('http://localhost:3000/containersList').then(response => response.json()).then(data => {\n      this.containersList = data;\n    }).catch(error => {\n      console.error('Error fetching containers list:', error);\n    });\n  }\n};","map":{"version":3,"names":["name","data","containersList","computed","categories","map","container","categoryItems","find","cube","category","items","methods","openCube","path","$router","push","created","fetch","then","response","json","catch","error","console"],"sources":["/Users/luciapannunzio/Desktop/Projects/bsr/app/src/components/MainRecycled.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\" v-for=\"(category, index) in categories\" :key=\"index\">\n      <div class=\"cube\" :style=\"{ backgroundColor: category.color }\" @click=\"openCube(category)\">\n        <h3>{{ category.category }}</h3>\n        <ul>\n          <li v-for=\"(item, itemIndex) in category.items\" :key=\"itemIndex\">{{ item }}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'MainRecycled',\n  data() {\n    return {\n      containersList: [],\n    };\n  },\n  computed: {\n    categories() {\n      return this.containersList.map(container => {\n        const categoryItems = this.containersList.find(cube => cube.category === container.category);\n        return {\n          ...container,\n          items: categoryItems ? categoryItems.items : []\n        };\n      });\n    }\n  },\n  methods: {\n    openCube(category) {\n      let path = '';\n      switch (category.category) {\n        case 'Other':\n          path = '/BlackOther';\n          break;\n        case 'Food':\n          path = '/BrownFood';\n          break;\n        case 'Light Glass':\n          path = '/GreenLightGlass';\n          break;\n        case 'Dark Glass':\n          path = '/GreenDarkGlass';\n          break;\n        case 'Plastic':\n          path = '/OrangePlastic';\n          break;\n        case 'Paper':\n          path = '/BluePaper';\n          break;\n        default:\n          break;\n      }\n      this.$router.push(path);\n    }\n  },\n  created() {\n    fetch('http://localhost:3000/containersList')\n      .then(response => response.json())\n      .then(data => {\n        this.containersList = data;\n      })\n      .catch(error => {\n        console.error('Error fetching containers list:', error);\n      });\n  }\n}\n</script>\n\n\n<style scoped>\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n.row {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin-bottom: 20px; \n}\n.cube {\n  cursor: pointer; /* Agrega cursor pointer para indicar que es clickeable */\n  width: 200px; \n  height: auto;\n  padding: 10px;\n  text-align: center;\n  border-radius: 10px;\n  font-weight: bold;\n  color: white;\n}\n.cube h3 {\n  margin-bottom: 10px;\n}\nul {\n  padding-left: 0;\n}\nli {\n  list-style-type: none;\n}\n</style>\n"],"mappings":";AAcA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACF,cAAc,CAACG,GAAG,CAACC,SAAQ,IAAK;QAC1C,MAAMC,aAAY,GAAI,IAAI,CAACL,cAAc,CAACM,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACC,QAAO,KAAMJ,SAAS,CAACI,QAAQ,CAAC;QAC5F,OAAO;UACL,GAAGJ,SAAS;UACZK,KAAK,EAAEJ,aAAY,GAAIA,aAAa,CAACI,KAAI,GAAI;QAC/C,CAAC;MACH,CAAC,CAAC;IACJ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAACH,QAAQ,EAAE;MACjB,IAAII,IAAG,GAAI,EAAE;MACb,QAAQJ,QAAQ,CAACA,QAAQ;QACvB,KAAK,OAAO;UACVI,IAAG,GAAI,aAAa;UACpB;QACF,KAAK,MAAM;UACTA,IAAG,GAAI,YAAY;UACnB;QACF,KAAK,aAAa;UAChBA,IAAG,GAAI,kBAAkB;UACzB;QACF,KAAK,YAAY;UACfA,IAAG,GAAI,iBAAiB;UACxB;QACF,KAAK,SAAS;UACZA,IAAG,GAAI,gBAAgB;UACvB;QACF,KAAK,OAAO;UACVA,IAAG,GAAI,YAAY;UACnB;QACF;UACE;MACJ;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,IAAI,CAAC;IACzB;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACRC,KAAK,CAAC,sCAAsC,EACzCC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAAClB,IAAG,IAAK;MACZ,IAAI,CAACC,cAAa,GAAID,IAAI;IAC5B,CAAC,EACAqB,KAAK,CAACC,KAAI,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,CAAC;EACN;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}