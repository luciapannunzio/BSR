{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Item Result\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"Category: \" + _toDisplayString($setup.category), 1 /* TEXT */), _createCommentVNode(\" <div> <img v-if=\\\"container.icon\\\" class=\\\"header-icon\\\" :src=\\\"require(`@/assets/icons/${container.icon}`)\\\" />\\n        </div> \"), _createElementVNode(\"p\", null, \"Color: \" + _toDisplayString($setup.color), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Item: \" + _toDisplayString($setup.item), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","$setup","category","_createCommentVNode","color","item"],"sources":["/Users/luciapannunzio/Desktop/Projects/bsr/app/src/components/ItemResult.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Item Result</h1>\n      <div>\n        <p>Category: {{ category }}</p>\n        <!-- <div> <img v-if=\"container.icon\" class=\"header-icon\" :src=\"require(`@/assets/icons/${container.icon}`)\" />\n        </div> -->\n        <p>Color: {{ color }}</p>\n        <p>Item: {{ item }}</p>\n      </div>\n    </div>\n  </template>\n  \n  <script setup>\n    // Importa los props que recibes del componente padre\n    import { ref, onMounted } from 'vue';\n    import { useRoute } from 'vue-router';\n    // import { useFetchContainers } from '@/composables/useFetchContainers';\n\n    // const { container } = useFetchContainers();\n  \n    const route = useRoute();\n  \n    // Define las propiedades que recibes del componente padre\n    const category = ref('');\n    const icon = ref('');\n    const color = ref('');\n    const item = ref('');\n  \n    // Cuando el componente se monta, asigna los valores de las props\n    onMounted(() => {\n      category.value = route.params.category;\n      icon.value = route.params.icon;\n      color.value = route.params.color;\n      item.value = route.params.item;\n    });\n  </script>\n  \n  <style lang=\"scss\"></style>"],"mappings":";gCAEMA,mBAAA,CAAoB,YAAhB,aAAW;;uBADjBC,mBAAA,CASM,cARJC,UAAoB,EACpBF,mBAAA,CAMM,cALJA,mBAAA,CAA+B,WAA5B,YAAU,GAAAG,gBAAA,CAAGC,MAAA,CAAAC,QAAQ,kBACxBC,mBAAA,sIACU,EACVN,mBAAA,CAAyB,WAAtB,SAAO,GAAAG,gBAAA,CAAGC,MAAA,CAAAG,KAAK,kBAClBP,mBAAA,CAAuB,WAApB,QAAM,GAAAG,gBAAA,CAAGC,MAAA,CAAAI,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}